{% comment %} Please do not edit this file. It is automatically updated by theMarketer.com {% endcomment %}
<!-- Start of theMarketer.com -->
{% if shop.metafields.themarketer-com-app and shop.metafields.themarketer-com-app.settings.value.status %}
<script type="text/javascript" async>
window.mktr = window.mktr || {};
window.dataLayer = window.dataLayer || [];

if (location.href.includes('{{ shop.metafields.themarketer-com-app.settings.value.domain }}')) {
{% if shop.metafields.themarketer-com-app.settings.value.google_status %}
(function(w,d,s,l,i){
  w[l]=w[l]||[];w[l].push({"gtm.start":new Date().getTime(),event:"gtm.js"}); var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!="dataLayer"?"&l="+l:"";
  j.async=true;j.src="https://www.googletagmanager.com/gtm.js?id="+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,"script","dataLayer", "{{ shop.metafields.themarketer-com-app.settings.value.google_tagcode }}");
{% endif %}
(function(d, s, i) {
  var f = d.getElementsByTagName(s)[0], j = d.createElement(s);j.async = true; j.src = "https://t.themarketer.com/t/j/" + i;
  f.parentNode.insertBefore(j, f);
})(document, "script", "{{ shop.metafields.themarketer-com-app.settings.value.tracking_key }}");

mktr.getCookie = function (name, defaultValue = []) {
  let value = `; ${document.cookie}`;
  let parts = value.split(`; ${name}=`);
  if (parts.length === 2) {
    let cookieValue = parts.pop().split(';').shift();
    cookieValue = decodeURIComponent(atob(cookieValue));
    try {
        return JSON.parse(cookieValue);
    } catch (e) {
        return cookieValue;
    }
  }
  mktr.setCookie(name, defaultValue);
  return defaultValue;
};

mktr.updateCart = function (listKey = []) {
  mktr.setCookieData = false;
  fetch(window.Shopify.routes.root + "cart.js").then(response => response.json()).then(function (data) {
    mktr.cartItems.forEach(function(variant, index) { if(mktr.dif(variant, data.items)) { listKey.push(variant.key); } });
    data.items.forEach(function(variant1, index1) { mktr.dif(variant1, mktr.cartItems, listKey); });
    if (mktr.setCookieData) {
      mktr.setCookie('mktr_cart_data', data.items);
      mktr.cartItems = data.items;
    }
    return data.items;
  });
};

mktr.debug = function () { if (typeof dataLayer != undefined) { for (let i of dataLayer) { console.log("Mktr","Google",i); } } };

mktr.setCookie = function (name, value, daysToExpire = 365) {
  if (name === 'mktr_cart_data') {
    let newValue = [];
    value.forEach(function(variant, index) {
      newValue.push({
          id: variant.id,
          sku: variant.sku,
          key: variant.key,
          product_id: variant.product_id,
          variant_title: variant.variant_title,
          quantity: variant.quantity
      });
    });
    value = newValue;
  }
  let expirationDate = new Date();
  expirationDate.setDate(expirationDate.getDate() + daysToExpire);
  if (typeof value === 'object') { value = JSON.stringify(value); }
  document.cookie = name + "=" + btoa(encodeURIComponent(value)) + "; expires=" + (expirationDate.toUTCString()) + "; path=/";
  // console.log(1, name, btoa(encodeURIComponent(value)).length, value);
};

mktr.dif = function (variant, data, listKey = null, add = false, remove = false, toSend = { event: null, product_id: null, quantity: null, variation: null }) {
  if (listKey !== null && !listKey.includes(variant.key)) {
    variantFind =  mktr.cartItems.filter(obj => variant.key === obj.key);
    if (variantFind.length === 0) { add = true;
      } else { variantFind = variantFind[0];
      if (variant.quantity < variantFind.quantity) {
        add = true; variant.quantity = variantFind.quantity - variant.quantity;
        } else if (variant.quantity > variantFind.quantity){
        remove = true; variant.quantity = variantFind.quantity - variant.quantity; 
      }
    }
  } else if(listKey === null) {
    variantFind = data.filter(obj => variant.key === obj.key);
    if (variantFind.length === 0) { remove = true;
      } else { variantFind = variantFind[0];
      if (variant.quantity < variantFind.quantity) {
        add = true; variant.quantity = variantFind.quantity - variant.quantity; 
      } else if (variant.quantity > variantFind.quantity){
        remove = true; variant.quantity = variant.quantity - variantFind.quantity; 
      }
    }
  }
  if (add) { toSend.event = "__sm__add_to_cart"; } else if (remove) { toSend.event = "__sm__remove_from_cart"; }
  if (add || remove) {
    if (variant.variant_title) { id = variant.id; sku = !variant.sku ? variant.product_id+"_"+variant.id : variant.sku;
    } else { id = variant.product_id; sku = !variant.sku ? variant.product_id : variant.sku; }
    toSend.product_id = variant.product_id;
    toSend.quantity = variant.quantity;
    toSend.variation = { id: id, sku: sku };
    dataLayer.push(toSend);
    mktr.setCookieData = true;
    return true;
  }
  return false;
};
mktr.firebase_config ="https:{{ 'firebase-config.js' | asset_url }}";
mktr.firebase_messaging ="https:{{ 'firebase-messaging-sw.js' | asset_url }}";

mktr.selectors = "{{ shop.metafields.themarketer-com-app.settings.value.selectors }}";
mktr.cartItems = mktr.getCookie('mktr_cart_data', {{ cart.items | json }});
mktr.try = 0;


/* console.log("Mktr","{{ template }}", "{{ search.terms }}"); */
mktr.view_product = true;
mktr.setCookieData = false;
mktr.startup = function () {
  if (typeof dataLayer != 'undefined') {
    {% if product.id  %}
      if (mktr.view_product) {
        dataLayer.push({"event":"__sm__view_product", "product_id": "{{ product.id }}"});
        mktr.view_product = false;
      }
    {% endif %}
  {% case template %}
    {% when "index" %}
      dataLayer.push({"event": "__sm__view_homepage"});
    {% when "collection" %}
      {% if collection.id %}
        dataLayer.push({"event": "__sm__view_category", "category":"{{ collection.title }}"});
      {% elsif collection.title and collection.title != "Products" %}
        dataLayer.push({"event": "__sm__view_brand", "name": "{{ collection.title }}"});
      {% endif %}
    {% when "product" %}
      if (mktr.view_product) {
        dataLayer.push({"event":"__sm__view_product", "product_id": "{{ product.id }}"});
        mktr.view_product = false;
      }
    {% when "search" %}
      dataLayer.push({"event":"__sm__search", "search_term": "{{ search.terms }}"});
    {% else %}
    var p = window.location.href.split('?');
    if (typeof p[1] !== 'undefined') {
      var urlSearchParams = new URLSearchParams(p[1]);
      var searchTerms = urlSearchParams.get('q');
      if (searchTerms !== null) {
        dataLayer.push({ "event":"__sm__search", "search_term": searchTerms });
      }
    }
  {% endcase %}
    setTimeout(mktr.updateCart, 2000);
  } else if (mktr.try < 6) {
    mktr.try++;
    setTimeout(mktr.startup, 2000);
  }
}
mktr.startup();
document.addEventListener("submit", function(event) {
  let emailValue = null; let name = null; let phoneValue = null;
  if (event.target.action.includes("{{ routes.cart_add_url }}")) {
    setTimeout(mktr.updateCart, 2000);
  } else if (event.target.action.includes("/cart") || event.target.action.includes('/checkouts') || event.target.action.includes('/checkout')) {
    dataLayer.push({ event: "__sm__initiate_checkout" });
  } else if (event.target.action.includes("/contact")) {
    emailValue = event.target.querySelector('[name*="email"]');
    if (emailValue && mktr.emailCheck(emailValue.value)) {
      emailValue = emailValue.value; let nameValue = event.target.querySelector('[name*="Name"]');
      name = mktr.mailName(nameValue ? nameValue.value : emailValue);
      phoneValue = event.target.querySelector('[name*="Phone"],[name*="number"]');
    } else { emailValue = null; }
  } else if (event.target.action.includes("/account/login")) {
    let emailSelector = '[name*="email"],[name*="customer[email]"]';
    emailValue = event.target.querySelector(emailSelector);
    if (emailValue && mktr.emailCheck(emailValue.value)) {
      emailValue = emailValue.value; name = mktr.mailName(emailValue);
    } else { emailValue = null; }
  } else if (event.target.action.includes("/account")) {
    let emailSelector = '[name*="email"],[name*="customer[email]"]';
    emailValue = event.target.querySelector(emailSelector);
    let fNameValue = event.target.querySelector('[name*="first_name"]');
    let lNameValue = event.target.querySelector('[name*="last_name"]');
    if (emailValue && mktr.emailCheck(emailValue.value)) {
      emailValue = emailValue.value; name = [];
      if (fNameValue) { name.push(fNameValue.value); }
      if (lNameValue) { name.push(lNameValue.value); }
      if (!name[0]) { name = mktr.mailName(emailValue); }
    } else { emailValue = null; }
  }
  if(emailValue !== null){ if (name === null || !name[1]) { name = mktr.mailName(emailValue); }
    dataLayer.push({ event: "__sm__set_email", email_address: emailValue, firstname: name[0], lastname: name[1] });
  }
  if (phoneValue !== null) { dataLayer.push({ event: "__sm__set_phone", phone: phoneValue.value }); }
});

mktr.getIdKeyFromLink = function (url = null) { if (url !== null) { return url.split("?id=")[1].split("&")[0]; } return url; };
mktr.emailCheck = function (email) { const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/; return emailRegex.test(email); }
mktr.mailName = function (email) { const [firstName, lastName] = email.split("@")[0].split(/[\._]/).map(name => name.charAt(0).toUpperCase() + name.slice(1)); return [firstName, lastName]; };

document.addEventListener("click", function(event) {
  if (event.target) {
    let href = true;
    let ss = typeof mktr.selectors === "string" && mktr.selectors.length === 0 ? '' : mktr.selectors + ',';
    let selector = ss + '.remove-item,[data-cart-remove],form[action="/cart/add"],[name="add"],[href^="/cart/change"],[id*="remove-"],[id*="Remove-"],[aria-label*="Remove"],[class*="quantity"]';
    
    let closestElem3 = event.target.matches(selector);
    let closestElem = event.target.closest(selector);
    if (closestElem3) {
      setTimeout(mktr.updateCart, 2000);
    } else {
      let selector1 = '.satcb-cs-checkout-btn,.gem-slider.gp-h-full.gp-overflow-hidden.gp-select-none,._rsi-buy-now-button-product-in-description,._buttonsWrapper_lx1p7_17,.button-checkout,.btn--checkout,[id="cart-checkout"],[name="checkout"],[name*="checkout"],[data-testid*="checkout"],[data-testid*="Checkout"],[id*="checkout"],[id*="Checkout"],[href^="/checkout"]';
      let closestElem1 = event.target.closest(selector1);
      let closestElem2 = event.target.matches(selector1);
      
      if (closestElem1) {
        dataLayer.push({ event: "__sm__initiate_checkout" });
      } else if (closestElem) {
        setTimeout(mktr.updateCart, 2000);
      } else if(closestElem2) {
        dataLayer.push({ event: "__sm__initiate_checkout" });
      } else {
        setTimeout(mktr.updateCart, 2000);
      }

      
    }
  }
});

  {% if shop.metafields.themarketer-com-app.settings.value.wishlist_engine and shop.metafields.themarketer-com-app.settings.value.wishlist_engine == "wishlist_engine"  %}
  mktr.loadWishListCount = 0;
  mktr.proccessProductInfo = function (fetchBody) {
    fetch("{{ shop.metafields.themarketer-com-app.settings.value.product_info }}", { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(fetchBody) })
      .then((response) => response.json())
      .then((response) => { if (response.event) { dataLayer.push(response); } })
      .catch((e) => { console.error(e); })
      .finally(() => { });
  };
  mktr.loadWishList = function () {
    if (typeof window.__this._addOrRemoveWishlist === 'function') {
      mktr.wishlistEngine = window.__this._addOrRemoveWishlist;
      mktr.wishlistEngineRemove = window.__this._wishlistPageRemoveButton
      window.__this._addOrRemoveWishlist = function () {
        let e = arguments[0];
        let fetchBody = { product_id: e.dataset.product_id, variant_id: e.dataset.variant_id, type: 'wishlist', add: (e.dataset.added == 'false' ? true : false)};
        let ret = mktr.wishlistEngine.apply(this, arguments);
        mktr.proccessProductInfo(fetchBody);
        return ret;
      };
      window.__this._wishlistPageRemoveButton = function () {
        let e = arguments[0];
        let fetchBody = { product_id: e.dataset.product_id, variant_id: e.dataset.variant_id, type: 'wishlist', add: (e.dataset.added == 'false' ? true : false)};
        let ret = mktr.wishlistEngineRemove.apply(this, arguments);
        mktr.proccessProductInfo(fetchBody);
        return ret;
      };
    } else if (mktr.loadWishListCount < 6) {
      setTimeout(mktr.loadWishList, 1000);
    }
  };
  setTimeout(mktr.loadWishList, 1000);
  {% endif %}
}
if (document.querySelector('[id$="_mktr_custom_app"]') !== null) {
  document.querySelector('[id$="_mktr_custom_app"]').style.display = 'none';
}
</script>
{% endif %}
<!-- End of theMarketer.com -->
{% schema %}
{
    "name": "Tracker",
    "tag": "section",
    "class": "section",
    "limit": 1,
    "settings": [
    {
        "type": "paragraph",
        "content": "theMarketer.com Tracker"
    },
    {
        "type": "paragraph",
        "content": "[Log In](https://app.themarketer.com/login)"
    }
    ],
    "presets": [
    {
        "name": "TheMarketer"
    }
    ],
    "enabled_on": {
    "groups": ["header"]
    }
}
{% endschema %}